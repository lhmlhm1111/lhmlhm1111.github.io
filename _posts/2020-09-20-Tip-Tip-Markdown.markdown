---
layout: post
title:  "[Tip] 마크다운 문법"
subtitle:   "마크다운 문법"
categories: tip
tags: Markdown github
comments: true
header-img:
---



저는 현재 삼성 Multi-Campus라는 곳에서 딥러닝 과정을 수강하고 있습니다. 수업 과정 중에 강동주 강사님이 진행하시는 "`github` 특강"을 듣게 됐는데 내용이 너무 좋아서 정리하여 공유하고자 합니다. 거기에 더해 `gitbhub` 블로그를 구축하는 법에 대해서도 포스팅 하려고 합니다. `github`에 본격적으로 들어가기 앞서 빌드업이 필요한 부분이 `Markdown` 문법과 `Shell` 명령어입니다. 그 중에 먼저 `Markdown` 문법에 대해 포스팅하고자 합니다.



먼저 `Markdown`이 뭔지에 대해 설명 드리면 

> `Markdown` 이란 문서가 화면에 표시되는 형식을 나타내는 **마크업 언어 (Markup language)**의 일종입니다. 비슷한 것을 예로 들면 웹에서 주로 이용되는 `HTML`이나 수식을 표현할 때 주로 사용되는 `TeX` 등을 들 수 있습니다.  사용법이 쉽고 간결하기 때문에 우리에게 친숙한 `jupyter notebook`과 `github`에서 문서를 작성할 때 많이 쓰입니다. 확장자 명은 `.md`입니다.



나중에 알게 되겠지만 `github`에 올린 코드를 설명하는 문서를 작성하기 위해서 `README.md`를 작성해야 합니다. 이 때 `Markdown` 문법을 알아 두는 것은 필수적입니다. 먼저 쉽게 `Markdown` 문서를 작성하기 위한 툴인 `Typora`를 소개하겠습니다. `Typora`는 `Markdown` 형식으로 작성된 문서를 실시간으로 랜더링해주므로 빠르게 `Markdown`문서를 확인하고 작성할 수 있습니다. [여기](https://typora.io/)에서 다운받으시면 됩니다.



본격적으로 `Markdown`문법에 대해 알려드리겠습니다.



## 1. Header

**Header**는 제목을 표현할 때 사용합니다. 글자 앞에 `#`을 붙여 사용할 수 있습니다. `HTML`에서 사용하는 `<h1>...<h6>` 태그와 동일한 기능입니다. `#`이 하나 붙을 때가 대제목이고 하나씩 더 붙을 수록 중제목, 소제목, 소소제목이 됩니다. 최대 6 개까지 `#`을 붙일 수 있습니다. 위가 `Markdown`이 적용됐을 때, 아래가 실제 타이핑한 것입니다. 참고로 typora에서 `ctrl + /`을 누르면 `Markdown`이 적용되지 않은 모드로 볼 수 있습니다.

# 대제목

\# 대제목

## 중제목

\#\# 중제목

### 소제목

\#\#\# 소제목

#### 소소제목
\#\#\#\#\# 소소제목



또 하나 참고로 `typora`에서 `#`을 Header를 나타내는데 사용하지 않는 방법은 `\`을 앞에 붙여주는 것입니다. 이를 마크다운 문법에서 탈출한다는 의미로 `Escape`라고 합니다. `#` 뿐 아니라 다른 `Markdown` 문법에서도 동일하게 적용됩니다.



## 2. List

**List**는 목록을 나열할 때 사용합니다.  순서가 있는 **List**와 순서가 없는 **List**로 구분할 수 있습니다. `tab` 키를 통해 특정 항목의 하위 항목도 나타내는 것이 가능합니다.

먼저 순서가 있는 **List**는 `1.`을 누르고 `spacebar`를 누르면 간단하게 생성됩니다.

1. 순서가 있는 항목
   1. 하위 항목
   2. 하위 항목
2. 순서가 있는 항목
   1. 하위 항목
   2. 하위 항목



순서가 없는 **List**는 `+` 혹은 `-` 을 누르고 `spacebar`를 누르면 생성됩니다.

+ 순서가 없는 항목
  + 하위 항목
  + 하위 항목



## 3. Code Block

**Code Block**은  **Inline**과 **Block** 두 가지로 사용 가능합니다. **Inline**은 단순 강조 용도로 많이 사용되고 **Block**은 코드를 문서 내부에 정리할 때 주로 사용합니다.

+ **Inline**
  + 인라인 블럭으로 처리하고 싶은 부분을 ` (백틱)으로 감싸주시면 됩니다. 제 키보드 기준으로는 숫자 1 바로 왼쪽에 있습니다. ' (따옴표) 랑 헷갈리시면 안됩니다.
+ **Block**
  + \` (백틱)을 3번 입력하고 `Enter`를 누르면 생성됩니다. 아래에 생기는 `Select Language`에 원하는 언어를 써주시면 자동으로 인식합니다.



아래 예시를 참고하시면 됩니다.



`jupyter notebook`에 `Hello World!`를 출력해보세요.

```python
print("Hello World!")
```



로컬에서 원격 저장소에 코드를 올리려면 `git push origin master`를 터미널에 입력합니다.

```shell
$ git add .
$ git commit -m "first commit"
$ git push origin master
```



## 4. Image

로컬이나 웹 상에 있는 이미지를 문서에 나타낼 때 사용합니다. `![]()`을 작성하고 `()`안에 경로를 `[]` 안에 이미지 파일의 이름을 작성합니다. 로컬에서 불러올 경우 되도록이면 상대 경로를 적는 것을 추천합니다. 아래 예시는 웹의 이미지를 불러온 것입니다. 



\!\[깃허브](https://user-images.githubusercontent.com/47618340/94341914-58a84480-0048-11eb-8496-3fee27cb844b.png)



![깃허브](https://user-images.githubusercontent.com/47618340/94341914-58a84480-0048-11eb-8496-3fee27cb844b.png)

## 5. Link

특정 주소로 링크를 걸 때 사용합니다. `[]()`를 작성하고 `()`안에 링크 주소를 `[]`에 어떤 링크의 주소인지를 작성합니다.



\[네이버](https://www.naver.com/)

[네이버](https://www.naver.com/)



## 6. Table

표를 작성할 때 사용합니다. `|` (파이프) 사이에 컬럼을 작성하고 `Enter`를 입력합니다.

`|이름|나이|성별|` 이렇게 작성하고 `Enter`를 치면

| 이름 | 나이 | 성별 |
| ---- | ---- | ---- |
|      |      |      |

위와 같이 나옵니다. 

표를 클릭하면 좌측 상단에 툴바가 나옵니다. 툴바를 이용해 표의 크기와 글자의 정렬을 조절해주시고 나머지 내용을 작성해주시면 됩니다.

| 이름   | 나이 | 성별 |
| ------ | ---- | ---- |
| 손흥민 | 20   | 남성 |
| 김연아 | 22   | 여성 |
| 엄준식 | ??   | 남성 |



## 7. 기타 

### 7.1 인용문

`>` 을 입력하고 `Spacebar`를 누릅니다.

>"3번은 개인주의야" 



인용문 내에 인용문을 중첩하는 것도 가능합니다.

> 이근 대위
>
> > "3번은 개인주의야"



### 7.2 수평선

`---`, `***`, `___`를 입력하여 작성합니다

+ `---`

---

+ `***`

***

+ `___`

___



### 7.3 강조

+ 이탤릭체는 문자를 `*`로 감싸줍니다

  > `*이탤릭체*`
  >
  > *이탤릭체*

+ 볼드체는 문자를 `**` 혹은 `__`로 감싸줍니다.

  > `**볼드체**`
  >
  > **볼드체**

+ 취소선은 문자를 `~~`로 감싸줍니다.

  > `~~취소선~~`
  >
  > ~~취소선~~



여기까지만 숙지한다면 `Markdown`을 이용해서 문서 작성을 하는데 전혀 어려움이 없을 것입니다. 다음 포스팅에서는 `github` 가입 및 설치에 대해 알아보도록 하겠습니다.

---

### 다음 포스팅

[github 가입 및 다운로드](https://lhmlhm1111.github.io/tip/2020/09/20/Tip-Tip-githup_signupsetup/)